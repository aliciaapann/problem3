; initial state is 0
; input alphabet is {0, 1}


;check if 0ent character is the middle character
0 * * R checkNext

;check if character at MR2 is Y - if yes this is the middle
checkNext Y Y L middle

;replace leftmost X if MR2 is not Y
checkNext * * L moveLeft0
moveLeft0 * * L moveLeft0
moveLeft0 _ _ R replaceX
moveLeft0 X X R replaceX

replaceX * X R moveRight

; Find rightmost Y
moveRight * * R moveRight
moveRight _ _ L replaceY
moveRight Y Y L replaceY

; Move left after replacing Y
replaceY * Y L moveLeft


;replace rightmost X
moveLeft * * L moveLeft
moveLeft X X R 0

;check if middle = 1
middle 1 1 * halt-accept

middle * * * halt-reject
0 Y Y * halt-reject
replaceY X X * halt-reject